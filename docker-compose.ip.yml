version: '3.2'
services:
    frontend:
        container_name: frontend_v2
        image: aergoscan/frontend:2.0.0
        ports:
            - '80:80'
        build:
            args:
                ARG_AERGO_NODE: ${AERGO_NODE}
                ARG_API_URL: http://localhost:3000/v2
            dockerfile: Dockerfile.ip
        depends_on:
            - backend
    backend:
        container_name: aergoscan-api
        image: aergoscan/api:2.1.2
        ports:
            - '3000:3000'
        build:
            context: ./aergoscan_v2_api
            args:
                ARG_SELECTED_NETWORK: local
                ARG_ES_URL: es:9200
                ARG_HTTP_PORT: 3000
        depends_on:
            - db
        restart: always
        privileged: true
        command:
            - sudo docker run -d --rm -p 3000:3000 --net=host --privileged --name aergoscan-api aergoscan/api:2.1.2
    indexer_check:
        container_name: indexer_check
        image: aergo/indexer2:2.1.4
        ports:
            - 8001:8001
        privileged: true
        command: indexer
            - --aergo=${AERGO_NODE}
            - --dburl=es:9200
            - --prefix=local
            - --mode=check
            - --from=0
            - --to=0
        depends_on:
            - db
    indexer_onsync:
        container_name: indexer_onsync
        image: aergo/indexer2:2.1.4
        privileged: true
        command: indexer
            - --aergo=${AERGO_NODE}
            - --dburl=es:9200
            - --prefix=local
            - --mode=onsync
        depends_on:
            - db
    db:
        container_name: es
        image: docker.elastic.co/elasticsearch/elasticsearch:7.15.2
        environment:
            discovery.type: single-node
            xpack.security.enabled: false
            bootstrap.memory_lock: true
            ES_JAVA_OPTS: -Xms1024m -Xmx1024m
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - type: bind
              source: ./data/eldata/data # custom
              target: /usr/share/elasticsearch/data
            - type: bind
              source: ./data/eldata/logs # custom
              target: /usr/share/elasticsearch/logs
        ports:
            - 9200:9200
            - 9300:9300
        privileged: true
        logging:
            driver: 'json-file'
            options:
                max-file: '7'
                max-size: '1000m'
    kibana:
        image: docker.elastic.co/kibana/kibana:7.15.2
        container_name: kibana
        ports:
            - 5601:5601
        environment:
            ELASTICSEARCH_URL: http://es:9200
            ELASTICSEARCH_HOSTS: http://es:9200
        logging:
            driver: 'json-file'
            options:
                max-file: '7'
                max-size: '1000m'
        depends_on:
            - db
